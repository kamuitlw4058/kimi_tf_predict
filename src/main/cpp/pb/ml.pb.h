// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ml.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ml_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ml_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tracking.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ml_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ml_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ml_2eproto;
namespace xn_adp {
class CandidateAd;
class CandidateAdDefaultTypeInternal;
extern CandidateAdDefaultTypeInternal _CandidateAd_default_instance_;
class PredictRequest;
class PredictRequestDefaultTypeInternal;
extern PredictRequestDefaultTypeInternal _PredictRequest_default_instance_;
class PredictResponse;
class PredictResponseDefaultTypeInternal;
extern PredictResponseDefaultTypeInternal _PredictResponse_default_instance_;
class PredictResult;
class PredictResultDefaultTypeInternal;
extern PredictResultDefaultTypeInternal _PredictResult_default_instance_;
}  // namespace xn_adp
PROTOBUF_NAMESPACE_OPEN
template<> ::xn_adp::CandidateAd* Arena::CreateMaybeMessage<::xn_adp::CandidateAd>(Arena*);
template<> ::xn_adp::PredictRequest* Arena::CreateMaybeMessage<::xn_adp::PredictRequest>(Arena*);
template<> ::xn_adp::PredictResponse* Arena::CreateMaybeMessage<::xn_adp::PredictResponse>(Arena*);
template<> ::xn_adp::PredictResult* Arena::CreateMaybeMessage<::xn_adp::PredictResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace xn_adp {

// ===================================================================

class CandidateAd :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:xn_adp.CandidateAd) */ {
 public:
  CandidateAd();
  virtual ~CandidateAd();

  CandidateAd(const CandidateAd& from);
  CandidateAd(CandidateAd&& from) noexcept
    : CandidateAd() {
    *this = ::std::move(from);
  }

  inline CandidateAd& operator=(const CandidateAd& from) {
    CopyFrom(from);
    return *this;
  }
  inline CandidateAd& operator=(CandidateAd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CandidateAd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CandidateAd* internal_default_instance() {
    return reinterpret_cast<const CandidateAd*>(
               &_CandidateAd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CandidateAd* other);
  friend void swap(CandidateAd& a, CandidateAd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CandidateAd* New() const final {
    return CreateMaybeMessage<CandidateAd>(nullptr);
  }

  CandidateAd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CandidateAd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CandidateAd& from);
  void MergeFrom(const CandidateAd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CandidateAd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "xn_adp.CandidateAd";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ml_2eproto);
    return ::descriptor_table_ml_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string category = 7;
  void clear_category();
  static const int kCategoryFieldNumber = 7;
  const std::string& category() const;
  void set_category(const std::string& value);
  void set_category(std::string&& value);
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  std::string* mutable_category();
  std::string* release_category();
  void set_allocated_category(std::string* category);

  // int32 planid = 1;
  void clear_planid();
  static const int kPlanidFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 planid() const;
  void set_planid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 campid = 2;
  void clear_campid();
  static const int kCampidFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 campid() const;
  void set_campid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 advid = 3;
  void clear_advid();
  static const int kAdvidFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 advid() const;
  void set_advid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 landingtype = 4;
  void clear_landingtype();
  static const int kLandingtypeFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 landingtype() const;
  void set_landingtype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 actiontype = 6;
  void clear_actiontype();
  static const int kActiontypeFieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::int32 actiontype() const;
  void set_actiontype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:xn_adp.CandidateAd)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr category_;
  ::PROTOBUF_NAMESPACE_ID::int32 planid_;
  ::PROTOBUF_NAMESPACE_ID::int32 campid_;
  ::PROTOBUF_NAMESPACE_ID::int32 advid_;
  ::PROTOBUF_NAMESPACE_ID::int32 landingtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 actiontype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ml_2eproto;
};
// -------------------------------------------------------------------

class PredictRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:xn_adp.PredictRequest) */ {
 public:
  PredictRequest();
  virtual ~PredictRequest();

  PredictRequest(const PredictRequest& from);
  PredictRequest(PredictRequest&& from) noexcept
    : PredictRequest() {
    *this = ::std::move(from);
  }

  inline PredictRequest& operator=(const PredictRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictRequest& operator=(PredictRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PredictRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictRequest* internal_default_instance() {
    return reinterpret_cast<const PredictRequest*>(
               &_PredictRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PredictRequest* other);
  friend void swap(PredictRequest& a, PredictRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictRequest* New() const final {
    return CreateMaybeMessage<PredictRequest>(nullptr);
  }

  PredictRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PredictRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PredictRequest& from);
  void MergeFrom(const PredictRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "xn_adp.PredictRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ml_2eproto);
    return ::descriptor_table_ml_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xn_adp.CandidateAd ads = 2;
  int ads_size() const;
  void clear_ads();
  static const int kAdsFieldNumber = 2;
  ::xn_adp::CandidateAd* mutable_ads(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::CandidateAd >*
      mutable_ads();
  const ::xn_adp::CandidateAd& ads(int index) const;
  ::xn_adp::CandidateAd* add_ads();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::CandidateAd >&
      ads() const;

  // .xn_adp.BidRequest bidreq = 1;
  bool has_bidreq() const;
  void clear_bidreq();
  static const int kBidreqFieldNumber = 1;
  const ::xn_adp::BidRequest& bidreq() const;
  ::xn_adp::BidRequest* release_bidreq();
  ::xn_adp::BidRequest* mutable_bidreq();
  void set_allocated_bidreq(::xn_adp::BidRequest* bidreq);

  // @@protoc_insertion_point(class_scope:xn_adp.PredictRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::CandidateAd > ads_;
  ::xn_adp::BidRequest* bidreq_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ml_2eproto;
};
// -------------------------------------------------------------------

class PredictResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:xn_adp.PredictResult) */ {
 public:
  PredictResult();
  virtual ~PredictResult();

  PredictResult(const PredictResult& from);
  PredictResult(PredictResult&& from) noexcept
    : PredictResult() {
    *this = ::std::move(from);
  }

  inline PredictResult& operator=(const PredictResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictResult& operator=(PredictResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PredictResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictResult* internal_default_instance() {
    return reinterpret_cast<const PredictResult*>(
               &_PredictResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PredictResult* other);
  friend void swap(PredictResult& a, PredictResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictResult* New() const final {
    return CreateMaybeMessage<PredictResult>(nullptr);
  }

  PredictResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PredictResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PredictResult& from);
  void MergeFrom(const PredictResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "xn_adp.PredictResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ml_2eproto);
    return ::descriptor_table_ml_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 planid = 1;
  void clear_planid();
  static const int kPlanidFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 planid() const;
  void set_planid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 pctr = 2;
  void clear_pctr();
  static const int kPctrFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 pctr() const;
  void set_pctr(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 pcvr = 3;
  void clear_pcvr();
  static const int kPcvrFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 pcvr() const;
  void set_pcvr(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:xn_adp.PredictResult)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 planid_;
  ::PROTOBUF_NAMESPACE_ID::int32 pctr_;
  ::PROTOBUF_NAMESPACE_ID::int32 pcvr_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ml_2eproto;
};
// -------------------------------------------------------------------

class PredictResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:xn_adp.PredictResponse) */ {
 public:
  PredictResponse();
  virtual ~PredictResponse();

  PredictResponse(const PredictResponse& from);
  PredictResponse(PredictResponse&& from) noexcept
    : PredictResponse() {
    *this = ::std::move(from);
  }

  inline PredictResponse& operator=(const PredictResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictResponse& operator=(PredictResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PredictResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictResponse* internal_default_instance() {
    return reinterpret_cast<const PredictResponse*>(
               &_PredictResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PredictResponse* other);
  friend void swap(PredictResponse& a, PredictResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictResponse* New() const final {
    return CreateMaybeMessage<PredictResponse>(nullptr);
  }

  PredictResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PredictResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PredictResponse& from);
  void MergeFrom(const PredictResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "xn_adp.PredictResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ml_2eproto);
    return ::descriptor_table_ml_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xn_adp.PredictResult data = 3;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  ::xn_adp::PredictResult* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::PredictResult >*
      mutable_data();
  const ::xn_adp::PredictResult& data(int index) const;
  ::xn_adp::PredictResult* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::PredictResult >&
      data() const;

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:xn_adp.PredictResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::PredictResult > data_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ml_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CandidateAd

// int32 planid = 1;
inline void CandidateAd::clear_planid() {
  planid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CandidateAd::planid() const {
  // @@protoc_insertion_point(field_get:xn_adp.CandidateAd.planid)
  return planid_;
}
inline void CandidateAd::set_planid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  planid_ = value;
  // @@protoc_insertion_point(field_set:xn_adp.CandidateAd.planid)
}

// int32 campid = 2;
inline void CandidateAd::clear_campid() {
  campid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CandidateAd::campid() const {
  // @@protoc_insertion_point(field_get:xn_adp.CandidateAd.campid)
  return campid_;
}
inline void CandidateAd::set_campid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:xn_adp.CandidateAd.campid)
}

// int32 advid = 3;
inline void CandidateAd::clear_advid() {
  advid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CandidateAd::advid() const {
  // @@protoc_insertion_point(field_get:xn_adp.CandidateAd.advid)
  return advid_;
}
inline void CandidateAd::set_advid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  advid_ = value;
  // @@protoc_insertion_point(field_set:xn_adp.CandidateAd.advid)
}

// int32 landingtype = 4;
inline void CandidateAd::clear_landingtype() {
  landingtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CandidateAd::landingtype() const {
  // @@protoc_insertion_point(field_get:xn_adp.CandidateAd.landingtype)
  return landingtype_;
}
inline void CandidateAd::set_landingtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  landingtype_ = value;
  // @@protoc_insertion_point(field_set:xn_adp.CandidateAd.landingtype)
}

// int32 actiontype = 6;
inline void CandidateAd::clear_actiontype() {
  actiontype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CandidateAd::actiontype() const {
  // @@protoc_insertion_point(field_get:xn_adp.CandidateAd.actiontype)
  return actiontype_;
}
inline void CandidateAd::set_actiontype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actiontype_ = value;
  // @@protoc_insertion_point(field_set:xn_adp.CandidateAd.actiontype)
}

// string category = 7;
inline void CandidateAd::clear_category() {
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CandidateAd::category() const {
  // @@protoc_insertion_point(field_get:xn_adp.CandidateAd.category)
  return category_.GetNoArena();
}
inline void CandidateAd::set_category(const std::string& value) {
  
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xn_adp.CandidateAd.category)
}
inline void CandidateAd::set_category(std::string&& value) {
  
  category_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xn_adp.CandidateAd.category)
}
inline void CandidateAd::set_category(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xn_adp.CandidateAd.category)
}
inline void CandidateAd::set_category(const char* value, size_t size) {
  
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xn_adp.CandidateAd.category)
}
inline std::string* CandidateAd::mutable_category() {
  
  // @@protoc_insertion_point(field_mutable:xn_adp.CandidateAd.category)
  return category_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CandidateAd::release_category() {
  // @@protoc_insertion_point(field_release:xn_adp.CandidateAd.category)
  
  return category_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CandidateAd::set_allocated_category(std::string* category) {
  if (category != nullptr) {
    
  } else {
    
  }
  category_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:xn_adp.CandidateAd.category)
}

// -------------------------------------------------------------------

// PredictRequest

// .xn_adp.BidRequest bidreq = 1;
inline bool PredictRequest::has_bidreq() const {
  return this != internal_default_instance() && bidreq_ != nullptr;
}
inline const ::xn_adp::BidRequest& PredictRequest::bidreq() const {
  const ::xn_adp::BidRequest* p = bidreq_;
  // @@protoc_insertion_point(field_get:xn_adp.PredictRequest.bidreq)
  return p != nullptr ? *p : *reinterpret_cast<const ::xn_adp::BidRequest*>(
      &::xn_adp::_BidRequest_default_instance_);
}
inline ::xn_adp::BidRequest* PredictRequest::release_bidreq() {
  // @@protoc_insertion_point(field_release:xn_adp.PredictRequest.bidreq)
  
  ::xn_adp::BidRequest* temp = bidreq_;
  bidreq_ = nullptr;
  return temp;
}
inline ::xn_adp::BidRequest* PredictRequest::mutable_bidreq() {
  
  if (bidreq_ == nullptr) {
    auto* p = CreateMaybeMessage<::xn_adp::BidRequest>(GetArenaNoVirtual());
    bidreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:xn_adp.PredictRequest.bidreq)
  return bidreq_;
}
inline void PredictRequest::set_allocated_bidreq(::xn_adp::BidRequest* bidreq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bidreq_);
  }
  if (bidreq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bidreq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bidreq, submessage_arena);
    }
    
  } else {
    
  }
  bidreq_ = bidreq;
  // @@protoc_insertion_point(field_set_allocated:xn_adp.PredictRequest.bidreq)
}

// repeated .xn_adp.CandidateAd ads = 2;
inline int PredictRequest::ads_size() const {
  return ads_.size();
}
inline void PredictRequest::clear_ads() {
  ads_.Clear();
}
inline ::xn_adp::CandidateAd* PredictRequest::mutable_ads(int index) {
  // @@protoc_insertion_point(field_mutable:xn_adp.PredictRequest.ads)
  return ads_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::CandidateAd >*
PredictRequest::mutable_ads() {
  // @@protoc_insertion_point(field_mutable_list:xn_adp.PredictRequest.ads)
  return &ads_;
}
inline const ::xn_adp::CandidateAd& PredictRequest::ads(int index) const {
  // @@protoc_insertion_point(field_get:xn_adp.PredictRequest.ads)
  return ads_.Get(index);
}
inline ::xn_adp::CandidateAd* PredictRequest::add_ads() {
  // @@protoc_insertion_point(field_add:xn_adp.PredictRequest.ads)
  return ads_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::CandidateAd >&
PredictRequest::ads() const {
  // @@protoc_insertion_point(field_list:xn_adp.PredictRequest.ads)
  return ads_;
}

// -------------------------------------------------------------------

// PredictResult

// int32 planid = 1;
inline void PredictResult::clear_planid() {
  planid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictResult::planid() const {
  // @@protoc_insertion_point(field_get:xn_adp.PredictResult.planid)
  return planid_;
}
inline void PredictResult::set_planid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  planid_ = value;
  // @@protoc_insertion_point(field_set:xn_adp.PredictResult.planid)
}

// int32 pctr = 2;
inline void PredictResult::clear_pctr() {
  pctr_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictResult::pctr() const {
  // @@protoc_insertion_point(field_get:xn_adp.PredictResult.pctr)
  return pctr_;
}
inline void PredictResult::set_pctr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pctr_ = value;
  // @@protoc_insertion_point(field_set:xn_adp.PredictResult.pctr)
}

// int32 pcvr = 3;
inline void PredictResult::clear_pcvr() {
  pcvr_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictResult::pcvr() const {
  // @@protoc_insertion_point(field_get:xn_adp.PredictResult.pcvr)
  return pcvr_;
}
inline void PredictResult::set_pcvr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pcvr_ = value;
  // @@protoc_insertion_point(field_set:xn_adp.PredictResult.pcvr)
}

// -------------------------------------------------------------------

// PredictResponse

// int32 code = 1;
inline void PredictResponse::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictResponse::code() const {
  // @@protoc_insertion_point(field_get:xn_adp.PredictResponse.code)
  return code_;
}
inline void PredictResponse::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:xn_adp.PredictResponse.code)
}

// string msg = 2;
inline void PredictResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PredictResponse::msg() const {
  // @@protoc_insertion_point(field_get:xn_adp.PredictResponse.msg)
  return msg_.GetNoArena();
}
inline void PredictResponse::set_msg(const std::string& value) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xn_adp.PredictResponse.msg)
}
inline void PredictResponse::set_msg(std::string&& value) {
  
  msg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xn_adp.PredictResponse.msg)
}
inline void PredictResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xn_adp.PredictResponse.msg)
}
inline void PredictResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xn_adp.PredictResponse.msg)
}
inline std::string* PredictResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:xn_adp.PredictResponse.msg)
  return msg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PredictResponse::release_msg() {
  // @@protoc_insertion_point(field_release:xn_adp.PredictResponse.msg)
  
  return msg_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PredictResponse::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:xn_adp.PredictResponse.msg)
}

// repeated .xn_adp.PredictResult data = 3;
inline int PredictResponse::data_size() const {
  return data_.size();
}
inline void PredictResponse::clear_data() {
  data_.Clear();
}
inline ::xn_adp::PredictResult* PredictResponse::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:xn_adp.PredictResponse.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::PredictResult >*
PredictResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:xn_adp.PredictResponse.data)
  return &data_;
}
inline const ::xn_adp::PredictResult& PredictResponse::data(int index) const {
  // @@protoc_insertion_point(field_get:xn_adp.PredictResponse.data)
  return data_.Get(index);
}
inline ::xn_adp::PredictResult* PredictResponse::add_data() {
  // @@protoc_insertion_point(field_add:xn_adp.PredictResponse.data)
  return data_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::xn_adp::PredictResult >&
PredictResponse::data() const {
  // @@protoc_insertion_point(field_list:xn_adp.PredictResponse.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace xn_adp

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ml_2eproto
